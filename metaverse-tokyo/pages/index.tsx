import type { NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import styles from '../styles/Home.module.css';
import { useState, createRef } from 'react';
import axios from 'axios';
import { MapScene } from '../compoments/mapbox-render-map';

const Home: NextPage = (context) => {
  console.log(context);
  const mapSceneRef = createRef<MapScene>();
  const mapScene = <MapScene ref={mapSceneRef} />;
  const router = useRouter();

  const [responseJson, setResponseJson] = useState('');
  const parseAndShowVRM = (binary: ArrayBuffer | string) => {
    mapSceneRef?.current?.updateVrmArryaBuffer(binary);
    //    const parsedVrm = parseMetum(binary);
    //    setResponseJson(JSON.stringify(JSON.parse(parsedVrm.metaString), null, 2));
  };
  const onLoadFile = (files: File[]) => {
    for (const file of files) {
      const reader = new FileReader();
      reader.onload = () => {
        const readFileResult = reader.result;
        if (readFileResult !== null) {
          parseAndShowVRM(readFileResult);
        }
      };
      reader.readAsArrayBuffer(file);
    }
  };
  const onLoadVRM = async (url: string) => {
    const vrmRes = await axios.get(url, { responseType: 'arraybuffer' });
    parseAndShowVRM(vrmRes.data);
  };
  onLoadVRM('https://taptappun.s3.ap-northeast-1.amazonaws.com/AliciaSolid.vrm');
//  onLoadVRM('https://github.com/TakuKobayashi/metaverse-tokyo-2022/raw/master/metaverse-tokyo/public/AliciaSolid.vrm');
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://api.mapbox.com/mapbox-gl-js/v2.0.0/mapbox-gl.css" rel="stylesheet" />
      </Head>

      {mapScene}
    </div>
  );
};

export default Home;
